version: '3.1'

services:
  nginx:
    image: nginx:alpine
    ports:
      - 8080:8080
    networks:
      - default
    volumes:
      - ./configuration/nginx.conf:/etc/nginx/nginx.conf


  db-agendamento:
    image: postgres:15
    container_name: postgres_container_agendamento
    env_file: meu-hospital-agendamento/.env
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_agendamento:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  meu-hospital-agendamento:
    build:
      context: .
      dockerfile: meu-hospital-agendamento/Dockerfile
    container_name: app_container_agendamento
    env_file:
      - meu-hospital-agendamento/.env
    ports:
      - "8083:8083"
    networks:
      - default
    environment:
      - SPRING_APPLICATION_NAME=meu-hospital-agendamento
      - SERVER_PORT=8083
      - JAVA_TOOL_OPTIONS=-Xmx512m
    depends_on:
      - db-agendamento
      - kafka

  scheduler-service:
    build:
      context: .
      dockerfile: scheduler-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_APPLICATION_NAME=scheduler-service
      - SERVER_PORT=8081
      - JAVA_TOOL_OPTIONS=-Xmx512m
    depends_on:
      - kafka
#    environment:
#      - JAVA_TOOL_OPTIONS="-Xmx512m"
    networks:
      - default


  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    depends_on:
      - kafka
      - mailhog
    ports:
      - "8082:8082"
    environment:
      - SPRING_APPLICATION_NAME=notification-service
      - SERVER_PORT=8082
      - JAVA_TOOL_OPTIONS=-Xmx512m
#    environment:
#      - JAVA_TOOL_OPTIONS="-Xmx512m"
    networks:
      - default

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  mailhog:
    image: mailhog/mailhog
    ports:
      - 1025:1025
      - 8025:8025

networks:
  default:
    ipam:
      config:
        - subnet: 172.16.100.0/24

volumes:
  postgres_data_agendamento:
